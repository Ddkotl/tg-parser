import * as fs from "node:fs";
import { TelegramClient } from "telegram";
import { StringSession } from "telegram/sessions/StringSession.js";
import { ask } from "../ask_in_terminal.js";

export async function createTgApiClient({
  apiId,
  apiHash,
  SESSION_FILE,
}: {
  apiId: string | undefined;
  apiHash: string | undefined;
  SESSION_FILE: string;
}): Promise<TelegramClient> {
  let sessionString = "";
  if (fs.existsSync(SESSION_FILE)) {
    sessionString = fs.readFileSync(SESSION_FILE, "utf8");
  }
  let stringSession = new StringSession(sessionString);

  if (!apiHash || !apiId) {
    console.error("‚ùå –ù–µ –∑–∞–¥–∞–Ω—ã TELEGRAM_CLIENT_API_ID –∏–ª–∏ TELEGRAM_CLIENT_API_HASH");
    process.exit(1);
  }

  console.log("üîÑ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram...");

  const client = new TelegramClient(stringSession, +apiId, apiHash, {
    connectionRetries: 5,
  });

  await client.start({
    phoneNumber: async () => await ask("üì± –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: "),
    password: async () => await ask("üîë –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å 2FA (–µ—Å–ª–∏ –µ—Å—Ç—å, –∏–Ω–∞—á–µ Enter): "),
    phoneCode: async () => await ask("üì© –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–∑ Telegram: "),
    onError: (err) => console.error("‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:", err),
  });

  console.log("‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å!");

  fs.writeFileSync(SESSION_FILE, stringSession.save());
  console.log("üíæ –°–µ—Å—Å–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤", SESSION_FILE);

  return client;
}
